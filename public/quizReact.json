[
    {
        "id": "01",
        "question" : "Which of the following is the correct name of React.js?",
        "options": [
            "React",
            "React.js",
            "ReactJS",
            "All of the above"
        ],
        "answer": "All of the above"
    },
    {
        "id": "02",
        "question" : "Which of the following are the advantages of React.js?",
        "options": [
            "React.js can increase the application's performance with Virtual DOM.",
            "React.js is easy to integrate with other frameworks such as Angular, BackboneJS since it is only a view library.",
            "React.js can render both on client and server side.",
            "All of the above"
        ],
        "answer": "All of the above"
    },
    {
        "id": "03",
        "question" : "Which of the following is not a disadvantage of React.js?",
        "options": [
            "React.js has only a view layer. We have put your code for Ajax requests, events and so on.",
            "The library of React.js is pretty large.",
            "The JSX in React.js makes code easy to read and write.",
            "The learning curve can be steep in React.js."
        ],
        "answer": "The JSX in React.js makes code easy to read and write."
    },
    {
        "id": "04",
        "question" : "Which of the following command is used to install create-react-app?",
        "options": [
            "npm install -g create-react-app",
            "npx create-react-app my-app",
            "npm install create-react-app",
            "npm install -f create-react-app"
        ],
        "answer": "npx create-react-app my-app"
    },
    {
        "id": "05",
        "question" : "What of the following is used in React.js to increase performance?",
        "options": [
            "Original DOM",
            "Virtual DOM",
            "Both A and B.",
            "None of the above."
        ],
        "answer": "Virtual DOM"
    },
    {
        "id": "06",
        "question" : "What is the default port where webpack-server runs?",
        "options": [
            "3000",
            "8080",
            "3030",
            "6060"
        ],
        "answer": "3000"
    },
    {
        "id": "07",
        "question" : "How many numbers of elements a valid react component can return?",
        "options": [
            "1",
            "2",
            "3",
            "Unlimited"
        ],
        "answer": "1"
    },
    {
        "id": "08",
        "question" : "What is the declarative way to render a dynamic list of components based on values in an array?",
        "options": [
            "Using the reduce array method",
            "Using the <Each /> component",
            "Using the Array.map() method",
            "With a for/while loop"
        ],
        "answer": "Using the Array.map() method"
    },
    {
        "id": "09",
        "question" : "What is a state in React?",
        "options": [
            "A permanent storage.",
            "Internal storage of the component.",
            "External storage of the component.",
            "None of the above."
        ],
        "answer": "Internal storage of the component."
    },
    {
        "id": "10",
        "question" : "What are the two ways to handle data in React?",
        "options": [
            "State & Props",
            "Services & Components",
            "State & Services",
            "State & Component"
        ],
        "answer": "State & Props"
    },
    {
        "id": "11",
        "question": "What is the purpose of the 'render' method in React components?",
        "options": [
          "To define the initial state of the component",
          "To handle user interactions and update the component",
          "To render the component's HTML markup",
          "To define the component's lifecycle methods"
        ],
        "answer": "To render the component's HTML markup"
      },
      {
        "id": "12",
        "question": "What is the significance of keys in React when rendering a list of elements?",
        "options": [
          "Keys help React identify which items have changed, are added, or are removed in a list",
          "Keys are used to specify the order of elements in a list",
          "Keys are necessary for React to track component state changes",
          "Keys have no specific significance in React"
        ],
        "answer": "Keys help React identify which items have changed, are added, or are removed in a list"
      },
      {
        "id": "13",
        "question": "What is the purpose of React.Fragment?",
        "options": [
          "To group multiple elements without adding an extra DOM node",
          "To define a reusable component",
          "To handle asynchronous operations in React",
          "To define the root component of a React application"
        ],
        "answer": "To group multiple elements without adding an extra DOM node"
      },
      {
        "id": "14",
        "question": "What is the role of shouldComponentUpdate() method in React?",
        "options": [
          "To update the component's state",
          "To check if the component should be re-rendered",
          "To handle errors during component rendering",
          "To define the component's initial props"
        ],
        "answer": "To check if the component should be re-rendered"
      },
      {
        "id": "15",
        "question": "What is the purpose of propTypes in React?",
        "options": [
          "To define the initial state of a component",
          "To specify the types of props that a component can receive",
          "To handle asynchronous operations in React",
          "To define the component's lifecycle methods"
        ],
        "answer": "To specify the types of props that a component can receive"
      },
      {
        "id": "16",
        "question": "What is the purpose of the componentDidMount() lifecycle method in React?",
        "options": [
          "To update the component's state",
          "To handle errors during component rendering",
          "To perform actions after the component has been added to the DOM",
          "To define the component's initial props"
        ],
        "answer": "To perform actions after the component has been added to the DOM"
      },
      {
        "id": "17",
        "question": "What is the significance of the 'key' prop in React?",
        "options": [
          "The 'key' prop uniquely identifies elements in an array of components",
          "The 'key' prop is used to specify the order of elements in a list",
          "The 'key' prop is required for all components in React",
          "The 'key' prop is used to define a reusable component"
        ],
        "answer": "The 'key' prop uniquely identifies elements in an array of components"
      },
      {
        "id": "18",
        "question": "What is the purpose of React.PureComponent?",
        "options": [
          "To define a component with a pure function",
          "To handle asynchronous operations in React",
          "To create a component with optimized shallow prop and state comparison",
          "To define a component with a pure render() method"
        ],
        "answer": "To create a component with optimized shallow prop and state comparison"
      },
      {
        "id": "19",
        "question": "In React, what is the recommended way to update the state of a component?",
        "options": [
          "By directly modifying the state object",
          "By using the setState() method",
          "By passing props from a parent component",
          "By using the forceUpdate() method"
        ],
        "answer": "By using the setState() method"
      },
      {
        "id": "20",
        "question": "What is the purpose of the shouldComponentUpdate() method in React?",
        "options": [
          "To update the component's state",
          "To check if the component should be re-rendered",
          "To handle errors during component rendering",
          "To define the component's lifecycle methods"
        ],
        "answer": "To check if the component should be re-rendered"
      },
      {
        "id": "21",
        "question": "What is the purpose of React hooks?",
        "options": [
            "To handle HTTP requests in React components",
            "To manage state and side effects in functional components",
            "To define lifecycle methods in class components",
            "To optimize rendering performance in React"
        ],
        "answer": "To manage state and side effects in functional components"
    },
    {
        "id": "22",
        "question": "What is the significance of the useEffect hook in React?",
        "options": [
            "It is used to handle form submissions in React",
            "It is used to fetch data from an API in React",
            "It is used to perform side effects in React components",
            "It is used to define the initial state of a component"
        ],
        "answer": "It is used to perform side effects in React components"
    },
    {
        "id": "23",
        "question": "What is the purpose of the useContext hook in React?",
        "options": [
            "It is used to handle user authentication in React",
            "It is used to share state between components without prop drilling",
            "It is used to handle routing in React applications",
            "It is used to manage form state in React"
        ],
        "answer": "It is used to share state between components without prop drilling"
    },
    {
        "id": "24",
        "question": "What is the role of the useCallback hook in React?",
        "options": [
            "It is used to memoize expensive calculations in React components",
            "It is used to handle user input in React forms",
            "It is used to create reusable custom hooks in React",
            "It is used to manage asynchronous operations in React"
        ],
        "answer": "It is used to memoize expensive calculations in React components"
    },
    {
        "id": "25",
        "question": "What is the purpose of the useRef hook in React?",
        "options": [
            "It is used to create references to DOM elements in React components",
            "It is used to manage form validation in React",
            "It is used to define the initial state of a component",
            "It is used to handle global state in React applications"
        ],
        "answer": "It is used to create references to DOM elements in React components"
    },
    {
        "id": "26",
        "question": "What is the role of the useMemo hook in React?",
        "options": [
            "It is used to handle asynchronous operations in React",
            "It is used to create reusable custom hooks in React",
            "It is used to memoize expensive calculations in React components",
            "It is used to manage form state in React"
        ],
        "answer": "It is used to memoize expensive calculations in React components"
    },
    {
        "id": "27",
        "question": "What is the purpose of the useReducer hook in React?",
        "options": [
            "It is used to manage component state in React",
            "It is used to handle HTTP requests in React components",
            "It is used to manage form validation in React",
            "It is used to handle complex state logic in React"
        ],
        "answer": "It is used to handle complex state logic in React"
    },
    {
        "id": "28",
        "question": "What is the significance of the useState hook in React?",
        "options": [
            "It is used to manage component state in React",
            "It is used to handle form submissions in React",
            "It is used to handle user authentication in React",
            "It is used to define the initial state of a component"
        ],
        "answer": "It is used to manage component state in React"
    },
    {
        "id": "29",
        "question": "What is the purpose of the useHistory hook in React Router?",
        "options": [
            "It is used to handle form submissions in React",
            "It is used to manage browser history in React applications",
            "It is used to manage form validation in React",
            "It is used to define the initial state of a component"
        ],
        "answer": "It is used to manage browser history in React applications"
    }
]